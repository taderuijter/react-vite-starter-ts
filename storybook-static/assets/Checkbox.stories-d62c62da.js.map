{"version":3,"file":"Checkbox.stories-d62c62da.js","sources":["../../src/components/inputs/Checkbox/Checkbox.tsx"],"sourcesContent":["import { useState } from \"react\";\n\n// Input type\nexport interface CheckBoxProps {\n  label: string;\n  required?: boolean;\n  options: { id: string; value: string }[];\n  styling?: string;\n  row?: boolean;\n  onChange: React.ChangeEventHandler<HTMLInputElement>;\n}\n\nexport const CheckboxInput = ({\n  label,\n  required,\n  options,\n  styling = \"border-gray-300 text-black focus:ring-black\",\n  row = true,\n  onChange,\n}: CheckBoxProps) => {\n  const [selectedValues, setSelectedValues] = useState<string[]>([]);\n\n  const handleCheckboxChange: React.ChangeEventHandler<HTMLInputElement> = (\n    event,\n  ) => {\n    const { value, checked } = event.target;\n\n    if (checked) {\n      setSelectedValues([...selectedValues, value]);\n    } else {\n      const newSelectedValues = selectedValues.filter((v) => v !== value);\n      setSelectedValues(newSelectedValues);\n    }\n\n    onChange(event);\n  };\n\n  return (\n    <div>\n      <label className=\"block text-sm font-medium leading-6 text-gray-900\">\n        {label}\n        {required && <span className=\"text-red-600\">*</span>}\n      </label>\n      <fieldset className=\"mt-4\">\n        <div className={row ? \"space-y-5\" : \"flex space-x-5\"}>\n          {options.map((item) => (\n            <div key={item.id} className=\"relative flex items-start\">\n              <div className=\"flex h-6 items-center\">\n                <input\n                  id={item.value}\n                  aria-describedby=\"comments-description\"\n                  name={item.value}\n                  type=\"checkbox\"\n                  className={`h-4 w-4 rounded ${styling}`}\n                  value={item.value}\n                  onChange={handleCheckboxChange}\n                />\n              </div>\n              <div className=\"ml-3 text-sm leading-6\">\n                <label htmlFor={item.value} className=\"text-gray-900\">\n                  {item.value}\n                </label>\n              </div>\n            </div>\n          ))}\n        </div>\n      </fieldset>\n    </div>\n  );\n};\n"],"names":["CheckboxInput","label","required","options","styling","row","onChange","selectedValues","setSelectedValues","useState","handleCheckboxChange","event","value","checked","newSelectedValues","v","jsxs","jsx","item"],"mappings":"yJAYO,MAAAA,EAAA,CAAA,CAAuB,MAAAC,EAC5B,SAAAC,EACA,QAAAC,EACA,QAAAC,EAAA,8CACU,IAAAC,EAAA,GACJ,SAAAC,CAER,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,CAAA,EAEAC,EAAAC,GAAA,CAGE,KAAA,CAAA,MAAAC,EAAA,QAAAC,GAAAF,EAAA,OAEA,GAAAE,EACEL,EAAA,CAAA,GAAAD,EAAAK,CAAA,CAAA,MAA4C,CAE5C,MAAAE,EAAAP,EAAA,OAAAQ,GAAAA,IAAAH,CAAA,EACAJ,EAAAM,CAAA,CAAmC,CAGrCR,EAAAK,CAAA,CAAc,EAGhB,OAAAK,EAAA,KAAA,MAAA,CAAA,SAAA,CAEIA,EAAAA,KAAA,QAAA,CAAA,UAAA,oDAAA,SAAA,CACGf,EAAAC,GAAAe,EAAA,IAAA,OAAA,CAAA,UAAA,eAAA,SAAA,IAAA,CAC4C,EAAA,EAC/CA,MAAA,WAAA,CAAA,UAAA,OAAA,SAAAA,EAAAA,IAAA,MAAA,CAAA,UAAAZ,EAAA,YAAA,iBAAA,SAAAF,EAAA,IAAAe,GAAAF,OAAA,MAAA,CAAA,UAAA,4BAAA,SAAA,CAKQC,EAAAA,IAAA,MAAA,CAAA,UAAA,wBAAA,SAAAA,EAAA,IACE,QAAC,CAAA,GAAAC,EAAA,MACU,mBAAA,uBACQ,KAAAA,EAAA,MACN,KAAA,WACN,UAAA,mBAAAd,CAAA,GACgC,MAAAc,EAAA,MACzB,SAAAR,CACF,CAAA,EAAA,EAEdO,EAAA,IAAA,MAAA,CAAA,UAAA,yBAAA,SAAAA,EAAAA,IAAA,QAAA,CAAA,QAAAC,EAAA,MAAA,UAAA,gBAAA,SAAAA,EAAA,KAAA,CAAA,EAAA,CAKA,CAAA,EAAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAIR,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}